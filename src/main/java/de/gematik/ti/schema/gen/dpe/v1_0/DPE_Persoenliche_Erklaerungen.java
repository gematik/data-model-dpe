//
//  This is a generated file, do not edit!
//  This file was generated from an xsd file and represents a simple or complex type of it.
//  Generated by a fork of xsd2cocoa (see https://github.com/Daij-Djan/xsd2cocoa) and a specified custom transform template.
//
package de.gematik.ti.schema.gen.dpe.v1_0;

import de.gematik.ti.schema.gen.utils.*;

import java.util.*;
import org.w3c.dom.*;

/** Generated Java class */
public class DPE_Persoenliche_Erklaerungen  {
    
    public static final String NAMESPACE = "DPE";
    
    // attributes:
    /*@isRequired*/
    public String ID_DPE;
    
    /*@isRequired*/
    public String DPE_letzte_Aktualisierung_time;
    
    /*@isRequired*/
    public String DPE_letzte_Aktualisierung_date;
    
    // elements:
    /*@isNotSingleOrNotOptionalValue*/
    
    public DPE_DPE_Versicherter DPE_Versicherter;
    
    /*@isSingleAndOptionalValue*/
    
    public DPE_DPE_Versicherter_Einwilligung DPE_Versicherter_Einwilligung;
    
    /*@isSingleAndOptionalValue*/
    
    public DPE_DPE_Gewebe_Organspendeerklaerung DPE_Gewebe_Organspendeerklaerung;
    
    /*@isSingleAndOptionalValue*/
    
    public DPE_DPE_Vorsorgevollmacht DPE_Vorsorgevollmacht;
    
    /*@isSingleAndOptionalValue*/
    
    public DPE_DPE_Patientenverfuegung DPE_Patientenverfuegung;
    
    // default Constructor
    public DPE_Persoenliche_Erklaerungen() {
        
        this.ID_DPE = new String();
        this.DPE_letzte_Aktualisierung_time = new String();
        this.DPE_letzte_Aktualisierung_date = new String();
        
        this.DPE_Versicherter = new DPE_DPE_Versicherter();
        
        this.DPE_Versicherter_Einwilligung = null;
        
        this.DPE_Gewebe_Organspendeerklaerung = null;
        
        this.DPE_Vorsorgevollmacht = null;
        
        this.DPE_Patientenverfuegung = null;
        
    }
    
    // copy Constructor
    public DPE_Persoenliche_Erklaerungen(DPE_Persoenliche_Erklaerungen _DPE_Persoenliche_Erklaerungen) {
        
        this.ID_DPE = _DPE_Persoenliche_Erklaerungen.ID_DPE;
        this.DPE_letzte_Aktualisierung_time = _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_time;
        this.DPE_letzte_Aktualisierung_date = _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_date;
        
        this.DPE_Versicherter = _DPE_Persoenliche_Erklaerungen.DPE_Versicherter;
        this.DPE_Versicherter_Einwilligung = _DPE_Persoenliche_Erklaerungen.DPE_Versicherter_Einwilligung;
        this.DPE_Gewebe_Organspendeerklaerung = _DPE_Persoenliche_Erklaerungen.DPE_Gewebe_Organspendeerklaerung;
        this.DPE_Vorsorgevollmacht = _DPE_Persoenliche_Erklaerungen.DPE_Vorsorgevollmacht;
        this.DPE_Patientenverfuegung = _DPE_Persoenliche_Erklaerungen.DPE_Patientenverfuegung;
    }
    
    public static DPE_Persoenliche_Erklaerungen deserialize(Node node) {
        if (node == null) {
            return null;
        }
        Element element = (Element) node;
        //DPE_Persoenliche_Erklaerungen _DPE_Persoenliche_Erklaerungen = new DPE_Persoenliche_Erklaerungen();
        
        DPE_Persoenliche_Erklaerungen _DPE_Persoenliche_Erklaerungen = new DPE_Persoenliche_Erklaerungen();
        
        _DPE_Persoenliche_Erklaerungen.ID_DPE = element.getAttributeNode("ID_DPE") != null ? element.getAttributeNode("ID_DPE").getValue() : null;
        // _DPE_Persoenliche_Erklaerungen.ID_DPE = element.getAttribute("ID_DPE");
        _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_time = element.getAttributeNode("DPE_letzte_Aktualisierung_time") != null ? element.getAttributeNode("DPE_letzte_Aktualisierung_time").getValue() : null;
        // _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_time = element.getAttribute("DPE_letzte_Aktualisierung_time");
        _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_date = element.getAttributeNode("DPE_letzte_Aktualisierung_date") != null ? element.getAttributeNode("DPE_letzte_Aktualisierung_date").getValue() : null;
        // _DPE_Persoenliche_Erklaerungen.DPE_letzte_Aktualisierung_date = element.getAttribute("DPE_letzte_Aktualisierung_date");
        
        String uriDPE_Versicherter = element.lookupNamespaceURI(DPE_DPE_Versicherter.NAMESPACE) != null ? element.lookupNamespaceURI(DPE_DPE_Versicherter.NAMESPACE) : element.lookupNamespaceURI(null);
        NodeList nodeListDPE_Versicherter = element.getElementsByTagNameNS(uriDPE_Versicherter ,"DPE_Versicherter");
        Node nodeDPE_Versicherter = nodeListDPE_Versicherter.item(0);
        _DPE_Persoenliche_Erklaerungen.DPE_Versicherter = DPE_DPE_Versicherter.deserialize(nodeDPE_Versicherter);
        
        String uriDPE_Versicherter_Einwilligung = element.lookupNamespaceURI(DPE_DPE_Versicherter_Einwilligung.NAMESPACE) != null ? element.lookupNamespaceURI(DPE_DPE_Versicherter_Einwilligung.NAMESPACE) : element.lookupNamespaceURI(null);
        NodeList nodeListDPE_Versicherter_Einwilligung = element.getElementsByTagNameNS(uriDPE_Versicherter_Einwilligung ,"DPE_Versicherter_Einwilligung");
        Node nodeDPE_Versicherter_Einwilligung = nodeListDPE_Versicherter_Einwilligung.item(0);
        _DPE_Persoenliche_Erklaerungen.DPE_Versicherter_Einwilligung = DPE_DPE_Versicherter_Einwilligung.deserialize(nodeDPE_Versicherter_Einwilligung);
        
        String uriDPE_Gewebe_Organspendeerklaerung = element.lookupNamespaceURI(DPE_DPE_Gewebe_Organspendeerklaerung.NAMESPACE) != null ? element.lookupNamespaceURI(DPE_DPE_Gewebe_Organspendeerklaerung.NAMESPACE) : element.lookupNamespaceURI(null);
        NodeList nodeListDPE_Gewebe_Organspendeerklaerung = element.getElementsByTagNameNS(uriDPE_Gewebe_Organspendeerklaerung ,"DPE_Gewebe_Organspendeerklaerung");
        Node nodeDPE_Gewebe_Organspendeerklaerung = nodeListDPE_Gewebe_Organspendeerklaerung.item(0);
        _DPE_Persoenliche_Erklaerungen.DPE_Gewebe_Organspendeerklaerung = DPE_DPE_Gewebe_Organspendeerklaerung.deserialize(nodeDPE_Gewebe_Organspendeerklaerung);
        
        String uriDPE_Vorsorgevollmacht = element.lookupNamespaceURI(DPE_DPE_Vorsorgevollmacht.NAMESPACE) != null ? element.lookupNamespaceURI(DPE_DPE_Vorsorgevollmacht.NAMESPACE) : element.lookupNamespaceURI(null);
        NodeList nodeListDPE_Vorsorgevollmacht = element.getElementsByTagNameNS(uriDPE_Vorsorgevollmacht ,"DPE_Vorsorgevollmacht");
        Node nodeDPE_Vorsorgevollmacht = nodeListDPE_Vorsorgevollmacht.item(0);
        _DPE_Persoenliche_Erklaerungen.DPE_Vorsorgevollmacht = DPE_DPE_Vorsorgevollmacht.deserialize(nodeDPE_Vorsorgevollmacht);
        
        String uriDPE_Patientenverfuegung = element.lookupNamespaceURI(DPE_DPE_Patientenverfuegung.NAMESPACE) != null ? element.lookupNamespaceURI(DPE_DPE_Patientenverfuegung.NAMESPACE) : element.lookupNamespaceURI(null);
        NodeList nodeListDPE_Patientenverfuegung = element.getElementsByTagNameNS(uriDPE_Patientenverfuegung ,"DPE_Patientenverfuegung");
        Node nodeDPE_Patientenverfuegung = nodeListDPE_Patientenverfuegung.item(0);
        _DPE_Persoenliche_Erklaerungen.DPE_Patientenverfuegung = DPE_DPE_Patientenverfuegung.deserialize(nodeDPE_Patientenverfuegung);
        
        return _DPE_Persoenliche_Erklaerungen;
    }
    
    public static List deserializeToList(List<Node> nodeList) {
        List result = new ArrayList<DPE_Persoenliche_Erklaerungen>();
        for( Node node : nodeList) {
            result.add(deserialize(node));
        }
        return result;
    }
    
    /**
    * Returns a map of attributes
    */
    public Map<String, Object> getAttributes() {
        HashMap<String, Object> attributesDict = new HashMap<>();
        
        attributesDict.put("ID_DPE", this.ID_DPE);
        attributesDict.put("DPE_letzte_Aktualisierung_time", this.DPE_letzte_Aktualisierung_time);
        attributesDict.put("DPE_letzte_Aktualisierung_date", this.DPE_letzte_Aktualisierung_date);
        
        return attributesDict;
    }
    
    /**
    * Returns a LinkedHashMap of the elements. LinkedHashMap is used as a workaround to provide the needed
    * functionality of a ordered array of tuples.
    */
    public LinkedHashMap<String, Object> getElements() {
        LinkedHashMap<String, Object> elemArray = new LinkedHashMap<>();
        
        elemArray.put("DPE_Versicherter", this.DPE_Versicherter);
        elemArray.put("DPE_Versicherter_Einwilligung", this.DPE_Versicherter_Einwilligung);
        elemArray.put("DPE_Gewebe_Organspendeerklaerung", this.DPE_Gewebe_Organspendeerklaerung);
        elemArray.put("DPE_Vorsorgevollmacht", this.DPE_Vorsorgevollmacht);
        elemArray.put("DPE_Patientenverfuegung", this.DPE_Patientenverfuegung);
        
        return elemArray;
    }
}

